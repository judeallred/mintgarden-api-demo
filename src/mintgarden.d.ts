/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/address/{id_hex}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Address */
        get: operations["get_address_address__id_hex__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/address/{id_hex}/nfts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Address Nfts */
        get: operations["get_address_nfts_address__id_hex__nfts_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/address/{id_hex}/nfts_by_collection": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Address Nfts By Collection */
        get: operations["get_address_nfts_by_collection_address__id_hex__nfts_by_collection_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/address/verify_signature": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Verify Signature */
        post: operations["verify_signature_address_verify_signature_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auctions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Auctions */
        get: operations["get_auctions_auctions_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Events */
        get: operations["get_events_events_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Collections */
        get: operations["get_collections_collections_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/{collection_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Collection */
        get: operations["get_collection_collections__collection_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/{collection_id}/metadata": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Collection Metadata */
        get: operations["get_collection_metadata_collections__collection_id__metadata_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/{collection_id}/nfts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Collection NFTs */
        get: operations["get_collection_nfts_collections__collection_id__nfts_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/{collection_id}/auctions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Collection Auctions */
        get: operations["get_collection_auctions_collections__collection_id__auctions_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/{collection_id}/nfts/by_offers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Collection NFTs (by offers) */
        get: operations["get_collection_nfts_by_offers_collections__collection_id__nfts_by_offers_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/{collection_id}/nfts/ids": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Collection Nft Ids */
        get: operations["get_collection_nft_ids_collections__collection_id__nfts_ids_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/{collection_id}/nfts/owners": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Collection Nft Owners */
        get: operations["get_collection_nft_owners_collections__collection_id__nfts_owners_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/{collection_id}/owners": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Collection Owners */
        get: operations["get_collection_owners_collections__collection_id__owners_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/nfts/{launcher_bech32}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Nft By Id */
        get: operations["get_nft_by_id_nfts__launcher_bech32__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/nfts/{launcher_bech32}/thumbnail": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Thumbnail */
        get: operations["get_thumbnail_nfts__launcher_bech32__thumbnail_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/nfts/{launcher_bech32}/original": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Original Data */
        get: operations["get_original_data_nfts__launcher_bech32__original_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/nfts/{launcher_bech32}/metadata": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Original Metadata */
        get: operations["get_original_metadata_nfts__launcher_bech32__metadata_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/nfts/{launcher_bech32}/license": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Original License */
        get: operations["get_original_license_nfts__launcher_bech32__license_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/nfts/{nft_id}/events/{event_index}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Event */
        get: operations["get_event_nfts__nft_id__events__event_index__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Profiles */
        get: operations["get_profiles_profile_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/supporters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Supporters */
        get: operations["get_supporters_supporters_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/profile/{username_or_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Profile */
        get: operations["get_profile_profile__username_or_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/profile/{id_hex}/nfts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Profile Nfts */
        get: operations["get_profile_nfts_profile__id_hex__nfts_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/profile/{id_hex}/collections": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Profile Collections */
        get: operations["get_profile_collections_profile__id_hex__collections_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search */
        get: operations["search_search_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search/nfts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search Nfts Paginated */
        get: operations["search_nfts_paginated_search_nfts_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search/collections": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search Collections Paginated */
        get: operations["search_collections_paginated_search_collections_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search/profiles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search Profiles Paginated */
        get: operations["search_profiles_paginated_search_profiles_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search/addresses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search Addresses Paginated */
        get: operations["search_addresses_paginated_search_addresses_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mints/{mint_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Mint */
        get: operations["get_mint_mints__mint_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mints/{mint_id}/offers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Mint Offers */
        get: operations["get_mint_offers_mints__mint_id__offers_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tokens": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Tokens */
        get: operations["get_tokens_tokens_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tokens/{token_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Token */
        get: operations["get_token_tokens__token_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gardens/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Gardens
         * @description Get a list of all gardens
         */
        get: operations["get_gardens_gardens__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gardens/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get By Slug
         * @description Get a garden by its slug
         */
        get: operations["get_by_slug_gardens__slug__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gardens/{slug}/profiles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Profiles
         * @description Get all profiles in a garden
         */
        get: operations["get_profiles_gardens__slug__profiles_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gardens/{slug}/collections": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Collections
         * @description Get all collections in a garden
         */
        get: operations["get_collections_gardens__slug__collections_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gardens/{slug}/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Events */
        get: operations["get_events_gardens__slug__events_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Address */
        Address: {
            /** Id */
            id: string;
            /** Encoded Id */
            encoded_id: string;
        };
        /** Auction */
        Auction: {
            /** Id */
            id: number;
            /** Description */
            description?: string;
            /**
             * Start
             * Format: date-time
             */
            start: string;
            /**
             * End
             * Format: date-time
             */
            end: string;
            /** Overtime Seconds */
            overtime_seconds: number;
            /** Reserve Xch Price */
            reserve_xch_price: number;
            /** Overtime */
            overtime: Record<string, never>;
            highest_bid?: components["schemas"]["NftOffer"];
        };
        /** AuctionNft */
        AuctionNft: {
            /** Id */
            id: string;
            /** Encoded Id */
            encoded_id: string;
            data: components["schemas"]["NftData"];
            /** Is Blocked */
            is_blocked?: boolean;
            /** Xch Price */
            xch_price?: number;
            /** Royalty Percentage */
            royalty_percentage?: number;
            /** Royalty Address */
            royalty_address?: string;
            creator?: components["schemas"]["Profile"];
            creator_address: components["schemas"]["Address"];
            owner_address?: components["schemas"]["Address"];
            owner?: components["schemas"]["Profile"];
            collection?: components["schemas"]["NftCollection"];
            /** Openrarity Rank */
            openrarity_rank?: string;
        };
        /** AuctionWithNft */
        AuctionWithNft: {
            /** Id */
            id: number;
            /** Description */
            description?: string;
            /**
             * Start
             * Format: date-time
             */
            start: string;
            /**
             * End
             * Format: date-time
             */
            end: string;
            /** Overtime Seconds */
            overtime_seconds: number;
            /** Reserve Xch Price */
            reserve_xch_price: number;
            /** Overtime */
            overtime: Record<string, never>;
            highest_bid?: components["schemas"]["NftOffer"];
            nft: components["schemas"]["AuctionNft"];
        };
        /** Coin */
        Coin: {
            /** Id */
            id: string;
            /** Spent Block Index */
            spent_block_index: number;
        };
        /**
         * CollectionInterval
         * @description An enumeration.
         * @enum {string}
         */
        CollectionInterval: "all" | "7" | "30";
        /** CollectionResult */
        CollectionResult: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Description */
            description?: string;
            /** Thumbnail Uri */
            thumbnail_uri?: string;
            /** Total Volume */
            total_volume?: number;
            /** Nft Count */
            nft_count?: number;
            /** Unminted Nft Count */
            unminted_nft_count?: number;
            creator?: components["schemas"]["Profile"];
        };
        /** CollectionWithNfts */
        CollectionWithNfts: {
            /** Id */
            id?: string;
            /** Name */
            name?: string;
            /** Sensitive Content */
            sensitive_content?: boolean;
            /** Blocked Content */
            blocked_content?: boolean;
            /** Thumbnail Uri */
            thumbnail_uri?: string;
            /** Nfts */
            nfts: components["schemas"]["FlatNft"][];
        };
        /** FlatNft */
        FlatNft: {
            /** Id */
            id: string;
            /** Encoded Id */
            encoded_id: string;
            /** Openrarity Rank */
            openrarity_rank?: string;
            /** Is Blocked */
            is_blocked?: boolean;
            data_type: components["schemas"]["NftDataType"];
            /** Thumbnail Uri */
            thumbnail_uri?: string;
            /** Name */
            name?: string;
            /** Description */
            description?: string;
            /** Sensitive Content */
            sensitive_content?: boolean;
            /** Edition Number */
            edition_number?: number;
            /** Edition Total */
            edition_total?: number;
            /** Metadata */
            metadata?: Record<string, never>;
            /** Collection Id */
            collection_id?: string;
            /** Collection Name */
            collection_name?: string;
            /** Collection Sensitive Content */
            collection_sensitive_content?: boolean;
            /** Collection Blocked Content */
            collection_blocked_content?: boolean;
            /** Token Id */
            token_id?: string;
            /** Token Code */
            token_code?: string;
            /** Price */
            price?: number;
            /** Creator Address Encoded Id */
            creator_address_encoded_id: string;
            /** Owner Address Encoded Id */
            owner_address_encoded_id: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
            /**
             * Minted At
             * Format: date-time
             */
            minted_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
            /** Creator Id */
            creator_id?: string;
            /** Creator Encoded Id */
            creator_encoded_id?: string;
            /** Creator Avatar Uri */
            creator_avatar_uri?: string;
            /** Creator Name */
            creator_name?: string;
            /** Creator Verification State */
            creator_verification_state?: number;
            /** Owner Id */
            owner_id?: string;
            /** Owner Encoded Id */
            owner_encoded_id?: string;
            /** Owner Avatar Uri */
            owner_avatar_uri?: string;
            /** Owner Name */
            owner_name?: string;
            /** Owner Verification State */
            owner_verification_state?: string;
        };
        /** GardenResponse */
        GardenResponse: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Slug */
            slug: string;
            /** Description */
            description?: string;
            /** Banner Image Url */
            banner_image_url?: string;
            /** Owner Id */
            owner_id: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Profiles */
            profiles: components["schemas"]["Profile"][];
            /** Collections */
            collections: components["schemas"]["NftCollection"][];
        };
        /** GetAddressResponse */
        GetAddressResponse: {
            /** Id */
            id: string;
            /** Encoded Id */
            encoded_id: string;
            /** Owned Nfts Count */
            owned_nfts_count: number;
            /** Created Nfts Count */
            created_nfts_count: number;
            /** Associated Profiles */
            associated_profiles: components["schemas"]["Profile"][];
        };
        /** GetProfileResponse */
        GetProfileResponse: {
            /** Id */
            id: string;
            /** Encoded Id */
            encoded_id: string;
            /** Verification State */
            verification_state: number;
            /** Username */
            username?: string;
            /** Name */
            name?: string;
            /** Bio */
            bio?: string;
            /** Website */
            website?: string;
            /** Twitter Handle */
            twitter_handle?: string;
            /** Avatar Uri */
            avatar_uri?: string;
            /** Header Uri */
            header_uri?: string;
            /** Discord User */
            discord_user?: Record<string, never>;
            /** Volume */
            volume?: number;
            /** Featured Nfts Count */
            featured_nfts_count?: number;
            /** Owned Nfts Count */
            owned_nfts_count?: number;
            /** Created Nfts Count */
            created_nfts_count?: number;
            /** Collections Count */
            collections_count?: number;
            /** Active Mints Count */
            active_mints_count?: number;
            /** Active Subscription */
            active_subscription?: components["schemas"]["Subscription"] | string;
        };
        /** GetProfilesResponse */
        GetProfilesResponse: {
            /** Id */
            id: string;
            /** Encoded Id */
            encoded_id: string;
            /** Verification State */
            verification_state: number;
            /** Username */
            username?: string;
            /** Name */
            name?: string;
            /** Bio */
            bio?: string;
            /** Website */
            website?: string;
            /** Twitter Handle */
            twitter_handle?: string;
            /** Avatar Uri */
            avatar_uri?: string;
            /** Header Uri */
            header_uri?: string;
            /** Discord User */
            discord_user?: Record<string, never>;
            /** Volume */
            volume?: number;
            /** Active Subscription */
            active_subscription?: components["schemas"]["Subscription"] | string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /**
         * MintType
         * @description An enumeration.
         * @enum {unknown}
         */
        MintType: 0 | 1;
        /** MintWithDetails */
        MintWithDetails: {
            /** Id */
            id: string;
            /** Creator Id */
            creator_id: string;
            /** Collection Id */
            collection_id?: string;
            /** Metadata Json */
            metadata_json?: Record<string, never>;
            mint_type?: components["schemas"]["MintType"];
            /** Mint Name */
            mint_name?: string;
            /** Mint Description */
            mint_description?: string;
            /** Mint Thumbnail Uri */
            mint_thumbnail_uri?: string;
            /** Name */
            name?: string;
            /** Thumbnail Uri */
            thumbnail_uri?: string;
            /** Preview Uri */
            preview_uri?: string;
            /** Data Uris */
            data_uris?: string[];
            /** Publish Offers */
            publish_offers?: boolean;
            /**
             * Release Time
             * Format: date-time
             */
            release_time?: string;
            /** Requested */
            requested?: Record<string, never>;
            creator?: components["schemas"]["Profile"];
            collection?: components["schemas"]["NftCollection"];
            /** Unminted Nft Count */
            unminted_nft_count: number;
            /** Nft Count */
            nft_count?: number;
        };
        /** NftCollection */
        NftCollection: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Description */
            description?: string;
            /** Thumbnail Uri */
            thumbnail_uri?: string;
            /** Banner Uri */
            banner_uri?: string;
            creator?: components["schemas"]["Profile"];
            /** Sensitive Content */
            sensitive_content: boolean;
            /** Blocked Content */
            blocked_content: boolean;
            /** Blocked Content Reason */
            blocked_content_reason?: string;
            /**
             * Suspicious Activity Timeout Until
             * Format: date-time
             */
            suspicious_activity_timeout_until?: string;
            /** Volume */
            volume?: number;
            /** Trade Count */
            trade_count?: number;
            /** Nft Count */
            nft_count?: number;
            /** Unminted Nft Count */
            unminted_nft_count?: number;
            /** Active Mints Count */
            active_mints_count?: number;
            /** Attached To Did Count */
            attached_to_did_count?: number;
            /** Collector Count */
            collector_count?: number;
            /** Floor Price */
            floor_price?: number;
            /** Latest Metadata */
            latest_metadata?: Record<string, never>;
        };
        /** NftCollectionWithAttributeFrequencies */
        NftCollectionWithAttributeFrequencies: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Description */
            description?: string;
            /** Thumbnail Uri */
            thumbnail_uri?: string;
            /** Banner Uri */
            banner_uri?: string;
            creator?: components["schemas"]["Profile"];
            /** Sensitive Content */
            sensitive_content: boolean;
            /** Blocked Content */
            blocked_content: boolean;
            /** Blocked Content Reason */
            blocked_content_reason?: string;
            /**
             * Suspicious Activity Timeout Until
             * Format: date-time
             */
            suspicious_activity_timeout_until?: string;
            /** Volume */
            volume?: number;
            /** Trade Count */
            trade_count?: number;
            /** Nft Count */
            nft_count?: number;
            /** Unminted Nft Count */
            unminted_nft_count?: number;
            /** Active Mints Count */
            active_mints_count?: number;
            /** Attached To Did Count */
            attached_to_did_count?: number;
            /** Collector Count */
            collector_count?: number;
            /** Floor Price */
            floor_price?: number;
            /** Latest Metadata */
            latest_metadata?: Record<string, never>;
            /** Attributes Frequency Counts */
            attributes_frequency_counts?: Record<string, never>;
            /** Attributes */
            attributes?: unknown;
        };
        /** NftData */
        NftData: {
            /** Data Uris */
            data_uris: string[];
            /** Data Hash */
            data_hash: string;
            /** Data Type */
            data_type: number;
            /** Thumbnail Uri */
            thumbnail_uri?: string;
            /** Preview Uri */
            preview_uri?: string;
            /** Integrity State */
            integrity_state: number;
            /** Metadata Hash */
            metadata_hash?: string;
            /** Metadata Json */
            metadata_json?: Record<string, never>;
            /** License Hash */
            license_hash?: string;
            /** License Integrity State */
            license_integrity_state?: number;
            /** Edition Number */
            edition_number?: number;
            /** Edition Total */
            edition_total?: number;
        };
        /**
         * NftDataType
         * @description An enumeration.
         * @enum {integer}
         */
        NftDataType: 0 | 1 | 2 | 3 | 4;
        /** NftEvent */
        NftEvent: {
            /** Nft Id */
            nft_id: string;
            /** Event Index */
            event_index: number;
            type: components["schemas"]["NftEventType"];
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
            /** Xch Price */
            xch_price?: number;
            /** Payments */
            payments?: components["schemas"]["NftEventPayment"][];
            address: components["schemas"]["Address"];
            owner?: components["schemas"]["Profile"];
            /**
             * Owner Since
             * Format: date-time
             */
            owner_since?: string;
            previous_address?: components["schemas"]["Address"];
            previous_owner?: components["schemas"]["Profile"];
            nft: components["schemas"]["NftEventNft"];
            collection?: components["schemas"]["NftEventCollection"];
            creator?: components["schemas"]["NftEventCreator"];
        };
        /** NftEventBase */
        NftEventBase: {
            /** Nft Id */
            nft_id: string;
            /** Event Index */
            event_index: number;
            type: components["schemas"]["NftEventType"];
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
            /** Xch Price */
            xch_price?: number;
            /** Payments */
            payments?: components["schemas"]["NftEventPayment"][];
            address: components["schemas"]["Address"];
            owner?: components["schemas"]["Profile"];
            /**
             * Owner Since
             * Format: date-time
             */
            owner_since?: string;
            previous_address?: components["schemas"]["Address"];
            previous_owner?: components["schemas"]["Profile"];
        };
        /** NftEventCollection */
        NftEventCollection: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Sensitive Content */
            sensitive_content: boolean;
            /** Blocked Content */
            blocked_content: boolean;
        };
        /** NftEventCreator */
        NftEventCreator: {
            /** Id */
            id: string;
            /** Name */
            name?: string;
        };
        /** NftEventNft */
        NftEventNft: {
            /** Id */
            id: string;
            /** Encoded Id */
            encoded_id: string;
            data: components["schemas"]["NftEventNftData"];
            /** Royalty Percentage */
            royalty_percentage?: number;
        };
        /** NftEventNftData */
        NftEventNftData: {
            /** Thumbnail Uri */
            thumbnail_uri?: string;
            /** Integrity State */
            integrity_state: number;
            /** Metadata Json */
            metadata_json?: Record<string, never>;
            /** Data Uris */
            data_uris?: unknown;
            data_type: components["schemas"]["NftDataType"];
        };
        /** NftEventPayment */
        NftEventPayment: {
            /** Puzzle Hash */
            puzzle_hash: string;
            /** Amount */
            amount: number;
            /** Asset Id */
            asset_id?: string;
            asset?: components["schemas"]["Token"];
        };
        /**
         * NftEventType
         * @description An enumeration.
         * @enum {integer}
         */
        NftEventType: 0 | 1 | 2 | 3;
        /** NftOffer */
        NftOffer: {
            /** Id */
            id: string;
            source: components["schemas"]["NftOfferSource"];
            status: components["schemas"]["OfferStatus"];
            side: components["schemas"]["OfferSide"];
            /** Xch Price */
            xch_price?: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Contains Mint Spend */
            contains_mint_spend?: boolean;
            /** Offered */
            offered?: Record<string, never>;
            /** Requested */
            requested?: Record<string, never>;
            /**
             * Expiration Date
             * Format: date-time
             */
            expiration_date?: string;
            /** Expiration Height */
            expiration_height?: number;
            /** Mint Id */
            mint_id?: string;
        };
        /**
         * NftOfferSource
         * @description An enumeration.
         * @enum {unknown}
         */
        NftOfferSource: 0 | 1;
        /** NftWithAuctions */
        NftWithAuctions: {
            /** Id */
            id: string;
            /** Encoded Id */
            encoded_id: string;
            data: components["schemas"]["NftData"];
            /** Is Blocked */
            is_blocked?: boolean;
            /** Xch Price */
            xch_price?: number;
            /** Royalty Percentage */
            royalty_percentage?: number;
            /** Royalty Address */
            royalty_address?: string;
            creator?: components["schemas"]["Profile"];
            creator_address: components["schemas"]["Address"];
            owner_address?: components["schemas"]["Address"];
            owner?: components["schemas"]["Profile"];
            collection?: components["schemas"]["NftCollectionWithAttributeFrequencies"];
            /** Openrarity Rank */
            openrarity_rank?: string;
            /**
             * Events
             * @default []
             */
            events: components["schemas"]["NftEventBase"][];
            launcher_coin: components["schemas"]["Coin"];
            /**
             * Auctions
             * @default []
             */
            auctions: components["schemas"]["Auction"][];
        };
        /**
         * NftsByOffersSortBy
         * @description An enumeration.
         * @enum {string}
         */
        NftsByOffersSortBy: "-created_at" | "xch_price";
        /**
         * NftsSortBy
         * @description An enumeration.
         * @enum {string}
         */
        NftsSortBy: "-updated_at" | "created_at" | "-created_at" | "rank" | "-chiatcg_rank";
        /**
         * OfferSide
         * @description An enumeration.
         * @enum {integer}
         */
        OfferSide: 1 | 2;
        /**
         * OfferStatus
         * @description An enumeration.
         * @enum {integer}
         */
        OfferStatus: 0 | 1 | 2 | 3 | 4 | 5 | 6;
        /** OfferWithNft */
        OfferWithNft: {
            /** Id */
            id: string;
            source: components["schemas"]["NftOfferSource"];
            status: components["schemas"]["OfferStatus"];
            side: components["schemas"]["OfferSide"];
            /** Xch Price */
            xch_price?: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Contains Mint Spend */
            contains_mint_spend?: boolean;
            /** Offered */
            offered?: Record<string, never>;
            /** Requested */
            requested?: Record<string, never>;
            /**
             * Expiration Date
             * Format: date-time
             */
            expiration_date?: string;
            /** Expiration Height */
            expiration_height?: number;
            /** Mint Id */
            mint_id?: string;
            nft: components["schemas"]["AuctionNft"];
        };
        /** Page[Address] */
        Page_Address_: {
            /** Items */
            items: components["schemas"]["Address"][];
            /** Page */
            page?: string;
            /** Size */
            size: number;
            /** Next */
            next: string;
            /** Previous */
            previous: string;
        };
        /** Page[AuctionWithNft] */
        Page_AuctionWithNft_: {
            /** Items */
            items: components["schemas"]["AuctionWithNft"][];
            /** Page */
            page?: string;
            /** Size */
            size: number;
            /** Next */
            next: string;
            /** Previous */
            previous: string;
        };
        /** Page[CollectionResult] */
        Page_CollectionResult_: {
            /** Items */
            items: components["schemas"]["CollectionResult"][];
            /** Page */
            page?: string;
            /** Size */
            size: number;
            /** Next */
            next: string;
            /** Previous */
            previous: string;
        };
        /** Page[FlatNft] */
        Page_FlatNft_: {
            /** Items */
            items: components["schemas"]["FlatNft"][];
            /** Page */
            page?: string;
            /** Size */
            size: number;
            /** Next */
            next: string;
            /** Previous */
            previous: string;
        };
        /** Page[GardenResponse] */
        Page_GardenResponse_: {
            /** Items */
            items: components["schemas"]["GardenResponse"][];
            /** Page */
            page?: string;
            /** Size */
            size: number;
            /** Next */
            next: string;
            /** Previous */
            previous: string;
        };
        /** Page[GetProfilesResponse] */
        Page_GetProfilesResponse_: {
            /** Items */
            items: components["schemas"]["GetProfilesResponse"][];
            /** Page */
            page?: string;
            /** Size */
            size: number;
            /** Next */
            next: string;
            /** Previous */
            previous: string;
        };
        /** Page[NftCollection] */
        Page_NftCollection_: {
            /** Items */
            items: components["schemas"]["NftCollection"][];
            /** Page */
            page?: string;
            /** Size */
            size: number;
            /** Next */
            next: string;
            /** Previous */
            previous: string;
        };
        /** Page[NftEvent] */
        Page_NftEvent_: {
            /** Items */
            items: components["schemas"]["NftEvent"][];
            /** Page */
            page?: string;
            /** Size */
            size: number;
            /** Next */
            next: string;
            /** Previous */
            previous: string;
        };
        /** Page[OfferWithNft] */
        Page_OfferWithNft_: {
            /** Items */
            items: components["schemas"]["OfferWithNft"][];
            /** Page */
            page?: string;
            /** Size */
            size: number;
            /** Next */
            next: string;
            /** Previous */
            previous: string;
        };
        /** Page[Profile] */
        Page_Profile_: {
            /** Items */
            items: components["schemas"]["Profile"][];
            /** Page */
            page?: string;
            /** Size */
            size: number;
            /** Next */
            next: string;
            /** Previous */
            previous: string;
        };
        /** Page[Token] */
        Page_Token_: {
            /** Items */
            items: components["schemas"]["Token"][];
            /** Page */
            page?: string;
            /** Size */
            size: number;
            /** Next */
            next: string;
            /** Previous */
            previous: string;
        };
        /** Profile */
        Profile: {
            /** Id */
            id: string;
            /** Encoded Id */
            encoded_id: string;
            /** Verification State */
            verification_state: number;
            /** Username */
            username?: string;
            /** Name */
            name?: string;
            /** Bio */
            bio?: string;
            /** Website */
            website?: string;
            /** Twitter Handle */
            twitter_handle?: string;
            /** Avatar Uri */
            avatar_uri?: string;
            /** Header Uri */
            header_uri?: string;
            /** Discord User */
            discord_user?: Record<string, never>;
            /** Volume */
            volume?: number;
        };
        /** SearchResponse */
        SearchResponse: {
            /** Collections */
            collections: components["schemas"]["CollectionResult"][];
            /** Nfts */
            nfts: components["schemas"]["FlatNft"][];
            /** Profiles */
            profiles: components["schemas"]["Profile"][];
            /** Addresses */
            addresses: components["schemas"]["Address"][];
        };
        /** SignatureJson */
        SignatureJson: {
            /** Pubkey */
            pubkey: string;
            /** Message */
            message: string;
            /** Signature */
            signature: string;
            /** Address */
            address: string;
            signing_mode?: components["schemas"]["SigningMode"];
        };
        /**
         * SigningMode
         * @description An enumeration.
         * @enum {unknown}
         */
        SigningMode: "BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_AUG:CHIP-0002_" | "BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_AUG:CHIP-0002_HEX" | "BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_AUG:utf8input_" | "BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_AUG:hexinput_" | "BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_AUG:CHIP-0002_P2_DELEGATED_PUZZLE";
        /** Subscription */
        Subscription: {
            plan: components["schemas"]["UserSubscriptionPlans"];
        };
        /** Token */
        Token: {
            /** Id */
            id: string;
            /** Code */
            code: string;
            /** Rank */
            rank: number;
            /** Name */
            name?: string;
            /** Description */
            description?: string;
        };
        /**
         * UserSubscriptionPlans
         * @description An enumeration.
         * @enum {unknown}
         */
        UserSubscriptionPlans: 0 | 1;
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_address_address__id_hex__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id_hex: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetAddressResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_address_nfts_address__id_hex__nfts_get: {
        parameters: {
            query: {
                type: string;
                collection_id?: string;
                page?: string;
                size?: number;
            };
            header?: never;
            path: {
                id_hex: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_FlatNft_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_address_nfts_by_collection_address__id_hex__nfts_by_collection_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id_hex: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CollectionWithNfts"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    verify_signature_address_verify_signature_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SignatureJson"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_auctions_auctions_get: {
        parameters: {
            query?: {
                page?: string;
                size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_AuctionWithNft_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_events_events_get: {
        parameters: {
            query?: {
                /** @example col1fnzpxnhr365z9d5phxc0a9nya3ypn5t8je4de97j3pux2anl64uqv0m0gs */
                collection?: string;
                /** @example did:chia:1zflc8mkghju28cvf67mpwq5065vz5akyzhzek7lvrgp689f28j3q4dhg9f */
                owner_id?: string;
                /** @example did:chia:1zflc8mkghju28cvf67mpwq5065vz5akyzhzek7lvrgp689f28j3q4dhg9f */
                address_id?: string;
                /**
                 * @description Filter by event type. Possible types: 0 (MINT), 1 (TRANSFER), 2 (TRADE), 3 (BURN)
                 * @example [
                 *       "0",
                 *       "2"
                 *     ]
                 */
                type?: string[];
                page?: string;
                size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Paginated list of events */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_NftEvent_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_collections_collections_get: {
        parameters: {
            query?: {
                interval?: components["schemas"]["CollectionInterval"];
                search?: string;
                include_zero_volume?: boolean;
                include_floor_price?: boolean;
                exclude_sus?: boolean;
                page?: string;
                size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A list of collections */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_NftCollection_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_collection_collections__collection_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                collection_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NftCollectionWithAttributeFrequencies"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_collection_metadata_collections__collection_id__metadata_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                collection_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_collection_nfts_collections__collection_id__nfts_get: {
        parameters: {
            query?: {
                /** @description The value to sort by. */
                sort_by?: components["schemas"]["NftsSortBy"];
                /** @example [
                 *       "Body",
                 *       "Face"
                 *     ] */
                filter?: string[];
                /** @example [
                 *       "Bear",
                 *       "Brown"
                 *     ] */
                filter_value?: string[];
                require_owner?: boolean;
                require_price?: boolean;
                include_metadata?: boolean;
                search?: string;
                page?: string;
                size?: number;
            };
            header?: never;
            path: {
                collection_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_FlatNft_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_collection_auctions_collections__collection_id__auctions_get: {
        parameters: {
            query?: {
                page?: string;
                size?: number;
            };
            header?: never;
            path: {
                collection_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_AuctionWithNft_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_collection_nfts_by_offers_collections__collection_id__nfts_by_offers_get: {
        parameters: {
            query?: {
                /** @description The value to sort by. */
                sort_by?: components["schemas"]["NftsByOffersSortBy"];
                /** @example [
                 *       "Body",
                 *       "Face"
                 *     ] */
                filter?: string[];
                /** @example [
                 *       "Bear",
                 *       "Brown"
                 *     ] */
                filter_value?: string[];
                include_unminted?: boolean;
                token_id?: string;
                search?: string;
                page?: string;
                size?: number;
            };
            header?: never;
            path: {
                collection_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_FlatNft_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_collection_nft_ids_collections__collection_id__nfts_ids_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                collection_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_collection_nft_owners_collections__collection_id__nfts_owners_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                collection_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_collection_owners_collections__collection_id__owners_get: {
        parameters: {
            query?: {
                force_profile?: boolean;
            };
            header?: never;
            path: {
                collection_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_nft_by_id_nfts__launcher_bech32__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                launcher_bech32: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NftWithAuctions"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_thumbnail_nfts__launcher_bech32__thumbnail_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                launcher_bech32: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_original_data_nfts__launcher_bech32__original_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                launcher_bech32: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_original_metadata_nfts__launcher_bech32__metadata_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                launcher_bech32: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_original_license_nfts__launcher_bech32__license_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                launcher_bech32: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_event_nfts__nft_id__events__event_index__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                nft_id: string;
                event_index: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Get event by ID */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NftEvent"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_profiles_profile_get: {
        parameters: {
            query?: {
                interval?: components["schemas"]["CollectionInterval"];
                include_zero_volume?: boolean;
                include_floor_price?: boolean;
                page?: string;
                size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A list of profiles, sorted by volume */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_GetProfilesResponse_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_supporters_supporters_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A list of profiles that subscribe to MintGarden premium */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetProfilesResponse"][];
                };
            };
        };
    };
    get_profile_profile__username_or_id__get: {
        parameters: {
            query?: {
                include_counts?: boolean;
            };
            header?: never;
            path: {
                username_or_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetProfileResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_profile_nfts_profile__id_hex__nfts_get: {
        parameters: {
            query: {
                type: string;
                collection_id?: string;
                include_metadata?: boolean;
                page?: string;
                size?: number;
            };
            header?: never;
            path: {
                id_hex: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_FlatNft_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_profile_collections_profile__id_hex__collections_get: {
        parameters: {
            query?: {
                include_latest_metadata?: unknown;
                page?: string;
                size?: number;
            };
            header?: never;
            path: {
                id_hex: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_NftCollection_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    search_search_get: {
        parameters: {
            query: {
                query: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SearchResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    search_nfts_paginated_search_nfts_get: {
        parameters: {
            query: {
                query: string;
                page?: string;
                size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_FlatNft_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    search_collections_paginated_search_collections_get: {
        parameters: {
            query: {
                query: string;
                page?: string;
                size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_CollectionResult_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    search_profiles_paginated_search_profiles_get: {
        parameters: {
            query: {
                query: string;
                page?: string;
                size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_Profile_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    search_addresses_paginated_search_addresses_get: {
        parameters: {
            query: {
                query: string;
                page?: string;
                size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_Address_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_mint_mints__mint_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                mint_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MintWithDetails"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_mint_offers_mints__mint_id__offers_get: {
        parameters: {
            query?: {
                page?: string;
                size?: number;
            };
            header?: never;
            path: {
                mint_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_OfferWithNft_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_tokens_tokens_get: {
        parameters: {
            query?: {
                query?: string;
                collection_id?: string;
                garden_id?: string;
                page?: string;
                size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A list of tokens */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_Token_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_token_tokens__token_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                token_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A token */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Token"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_gardens_gardens__get: {
        parameters: {
            query?: {
                page?: string;
                size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_GardenResponse_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_by_slug_gardens__slug__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GardenResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_profiles_gardens__slug__profiles_get: {
        parameters: {
            query?: {
                limit?: number;
                offset?: number;
            };
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Profile"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_collections_gardens__slug__collections_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NftCollection"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_events_gardens__slug__events_get: {
        parameters: {
            query?: {
                /**
                 * @description Filter by event type. Possible types: 0 (MINT), 1 (TRANSFER), 2 (TRADE), 3 (BURN)
                 * @example [
                 *       "0",
                 *       "2"
                 *     ]
                 */
                type?: string[];
                page?: string;
                size?: number;
            };
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Paginated list of events for a garden */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Page_NftEvent_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
